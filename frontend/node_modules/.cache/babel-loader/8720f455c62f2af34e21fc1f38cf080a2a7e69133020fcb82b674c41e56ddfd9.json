{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\New folder\\\\trinix_web\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Normalize base URL and ensure /api suffix when missing\n  const RAW_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n  const API_BASE_URL = (() => {\n    const trimmed = RAW_BASE.replace(/\\/$/, '');\n    return /\\/api(\\b|\\/)/.test(trimmed) ? trimmed : `${trimmed}/api`;\n  })();\n  const http = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  const getAuthConfig = overrideToken => {\n    const tk = overrideToken || localStorage.getItem('token');\n    return {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(tk ? {\n          Authorization: `Bearer ${tk}`\n        } : {})\n      }\n    };\n  };\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (storedToken && storedUser) {\n        try {\n          // Verify token is still valid by hitting the users dashboard endpoint\n          await http.get('/users/dashboard', getAuthConfig(storedToken));\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n        } catch (error) {\n          // Fallback to legacy /auth/me\n          try {\n            await http.get('/auth/me', getAuthConfig(storedToken));\n            setToken(storedToken);\n            setUser(JSON.parse(storedUser));\n          } catch (_) {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            setToken(null);\n            setUser(null);\n          }\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      var _data, _data2;\n      let data;\n      try {\n        ({\n          data\n        } = await http.post('/users/login', credentials, getAuthConfig()));\n      } catch (e) {\n        var _e$response;\n        if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {\n          const resp = await http.post('/auth/login', credentials, getAuthConfig());\n          data = resp === null || resp === void 0 ? void 0 : resp.data;\n        } else {\n          throw e;\n        }\n      }\n      if ((_data = data) !== null && _data !== void 0 && _data.token && (_data2 = data) !== null && _data2 !== void 0 && _data2.user) {\n        const {\n          token: newToken,\n          user: userData\n        } = data;\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('user', JSON.stringify(userData));\n        setToken(newToken);\n        setUser(userData);\n        return {\n          success: true,\n          user: userData\n        };\n      }\n      throw new Error('Invalid response from server');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const payload = {\n        first_name: userData.firstName,\n        last_name: userData.lastName,\n        email: userData.email,\n        password: userData.password,\n        confirm_password: userData.confirmPassword,\n        phone: userData.phone || '',\n        company: userData.company || '',\n        role: 'user'\n      };\n      let data;\n      try {\n        ({\n          data\n        } = await http.post('/users/signup', payload, getAuthConfig()));\n      } catch (e) {\n        var _e$response2;\n        if ((e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status) === 404) {\n          const resp = await http.post('/auth/register', payload, getAuthConfig());\n          data = resp === null || resp === void 0 ? void 0 : resp.data;\n        } else {\n          throw e;\n        }\n      }\n      const envelope = data || {};\n      const authData = envelope.data || envelope; // support both {data:{...}} and flat\n      if (envelope.success && authData !== null && authData !== void 0 && authData.token && authData !== null && authData !== void 0 && authData.user || authData !== null && authData !== void 0 && authData.token && authData !== null && authData !== void 0 && authData.user) {\n        const {\n          token: newToken,\n          user: newUser\n        } = authData;\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setToken(newToken);\n        setUser(newUser);\n        return {\n          success: true,\n          user: newUser\n        };\n      }\n      throw new Error(envelope.message || 'Registration failed');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      // Best-effort call to backend (will succeed only if token present)\n      await http.post('/users/logout', {}, getAuthConfig());\n    } catch (_) {\n      // ignore errors\n    }\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Clear state\n    setToken(null);\n    setUser(null);\n  };\n  const isAuthenticated = () => {\n    return !!(token && user);\n  };\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","RAW_BASE","process","env","REACT_APP_API_URL","API_BASE_URL","trimmed","replace","test","http","create","baseURL","headers","Accept","getAuthConfig","overrideToken","tk","Authorization","checkAuth","storedToken","storedUser","get","JSON","parse","error","_","removeItem","login","credentials","_data","_data2","data","post","e","_e$response","response","status","resp","newToken","userData","setItem","stringify","success","_error$response","_error$response$data","console","message","register","payload","first_name","firstName","last_name","lastName","email","password","confirm_password","confirmPassword","phone","company","role","_e$response2","envelope","authData","newUser","_error$response2","_error$response2$data","logout","isAuthenticated","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/New folder/trinix_web/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Normalize base URL and ensure /api suffix when missing\r\n  const RAW_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n  const API_BASE_URL = (() => {\r\n    const trimmed = RAW_BASE.replace(/\\/$/, '');\r\n    return /\\/api(\\b|\\/)/.test(trimmed) ? trimmed : `${trimmed}/api`;\r\n  })();\r\n  const http = axios.create({ baseURL: API_BASE_URL, headers: { Accept: 'application/json' } });\r\n  const getAuthConfig = (overrideToken) => {\r\n    const tk = overrideToken || localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(tk ? { Authorization: `Bearer ${tk}` } : {})\r\n      }\r\n    };\r\n  };\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      const storedUser = localStorage.getItem('user');\r\n      \r\n      if (storedToken && storedUser) {\r\n        try {\r\n          // Verify token is still valid by hitting the users dashboard endpoint\r\n          await http.get('/users/dashboard', getAuthConfig(storedToken));\r\n          setToken(storedToken);\r\n          setUser(JSON.parse(storedUser));\r\n        } catch (error) {\r\n          // Fallback to legacy /auth/me\r\n          try {\r\n            await http.get('/auth/me', getAuthConfig(storedToken));\r\n            setToken(storedToken);\r\n            setUser(JSON.parse(storedUser));\r\n          } catch (_) {\r\n            // Token is invalid, clear storage\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            setToken(null);\r\n            setUser(null);\r\n          }\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      let data;\r\n      try {\r\n        ({ data } = await http.post('/users/login', credentials, getAuthConfig()));\r\n      } catch (e) {\r\n        if (e?.response?.status === 404) {\r\n          const resp = await http.post('/auth/login', credentials, getAuthConfig());\r\n          data = resp?.data;\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n      if (data?.token && data?.user) {\r\n        const { token: newToken, user: userData } = data;\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        setToken(newToken);\r\n        setUser(userData);\r\n        return { success: true, user: userData };\r\n      }\r\n      throw new Error('Invalid response from server');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error?.response?.data?.message || error.message || 'Login failed. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const payload = {\r\n        first_name: userData.firstName,\r\n        last_name: userData.lastName,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        confirm_password: userData.confirmPassword,\r\n        phone: userData.phone || '',\r\n        company: userData.company || '',\r\n        role: 'user'\r\n      };\r\n      let data;\r\n      try {\r\n        ({ data } = await http.post('/users/signup', payload, getAuthConfig()));\r\n      } catch (e) {\r\n        if (e?.response?.status === 404) {\r\n          const resp = await http.post('/auth/register', payload, getAuthConfig());\r\n          data = resp?.data;\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n      const envelope = data || {};\r\n      const authData = envelope.data || envelope; // support both {data:{...}} and flat\r\n      if ((envelope.success && authData?.token && authData?.user) || (authData?.token && authData?.user)) {\r\n        const { token: newToken, user: newUser } = authData;\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('user', JSON.stringify(newUser));\r\n        setToken(newToken);\r\n        setUser(newUser);\r\n        return { success: true, user: newUser };\r\n      }\r\n      throw new Error(envelope.message || 'Registration failed');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { success: false, error: error?.response?.data?.message || error.message || 'Registration failed. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Best-effort call to backend (will succeed only if token present)\r\n      await http.post('/users/logout', {}, getAuthConfig());\r\n    } catch (_) {\r\n      // ignore errors\r\n    }\r\n    // Clear localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    // Clear state\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!(token && user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user && user.role === 'admin';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated,\r\n    isAdmin\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}