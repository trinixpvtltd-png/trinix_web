{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\New folder\\\\trinix_web\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n  const http = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  const getAuthConfig = overrideToken => {\n    const tk = overrideToken || localStorage.getItem('token');\n    return {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(tk ? {\n          Authorization: `Bearer ${tk}`\n        } : {})\n      }\n    };\n  };\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (storedToken && storedUser) {\n        try {\n          // Verify token is still valid by hitting the users dashboard endpoint\n          await http.get('/users/dashboard', getAuthConfig(storedToken));\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const {\n        data\n      } = await http.post('/users/login', credentials, getAuthConfig());\n      if (data !== null && data !== void 0 && data.token && data !== null && data !== void 0 && data.user) {\n        const {\n          token: newToken,\n          user: userData\n        } = data;\n\n        // Store in localStorage\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('user', JSON.stringify(userData));\n\n        // Update state\n        setToken(newToken);\n        setUser(userData);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const payload = {\n        first_name: userData.firstName,\n        last_name: userData.lastName,\n        email: userData.email,\n        password: userData.password,\n        confirm_password: userData.confirmPassword,\n        phone: userData.phone || '',\n        company: userData.company || '',\n        role: 'user'\n      };\n      const {\n        data\n      } = await http.post('/users/signup', payload, getAuthConfig());\n      const envelope = data || {};\n      const authData = envelope.data || envelope; // support both {data:{...}} and flat\n\n      if (envelope.success && authData !== null && authData !== void 0 && authData.token && authData !== null && authData !== void 0 && authData.user || authData !== null && authData !== void 0 && authData.token && authData !== null && authData !== void 0 && authData.user) {\n        const {\n          token: newToken,\n          user: newUser\n        } = authData;\n\n        // Store in localStorage\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('user', JSON.stringify(newUser));\n\n        // Update state\n        setToken(newToken);\n        setUser(newUser);\n        return {\n          success: true,\n          user: newUser\n        };\n      } else {\n        throw new Error(envelope.message || 'Registration failed');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      // Best-effort call to backend (will succeed only if token present)\n      await http.post('/users/logout', {}, getAuthConfig());\n    } catch (_) {\n      // ignore errors\n    }\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Clear state\n    setToken(null);\n    setUser(null);\n  };\n  const isAuthenticated = () => {\n    return !!(token && user);\n  };\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","API_BASE_URL","process","env","REACT_APP_API_URL","http","create","baseURL","headers","Accept","getAuthConfig","overrideToken","tk","Authorization","checkAuth","storedToken","storedUser","get","JSON","parse","error","removeItem","login","credentials","data","post","newToken","userData","setItem","stringify","success","_error$response","_error$response$data","console","response","message","register","payload","first_name","firstName","last_name","lastName","email","password","confirm_password","confirmPassword","phone","company","role","envelope","authData","newUser","_error$response2","_error$response2$data","logout","_","isAuthenticated","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/New folder/trinix_web/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n  const http = axios.create({ baseURL: API_BASE_URL, headers: { Accept: 'application/json' } });\r\n  const getAuthConfig = (overrideToken) => {\r\n    const tk = overrideToken || localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(tk ? { Authorization: `Bearer ${tk}` } : {})\r\n      }\r\n    };\r\n  };\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      const storedUser = localStorage.getItem('user');\r\n      \r\n      if (storedToken && storedUser) {\r\n        try {\r\n          // Verify token is still valid by hitting the users dashboard endpoint\r\n          await http.get('/users/dashboard', getAuthConfig(storedToken));\r\n          setToken(storedToken);\r\n          setUser(JSON.parse(storedUser));\r\n        } catch (error) {\r\n          // Token is invalid, clear storage\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          setToken(null);\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const { data } = await http.post('/users/login', credentials, getAuthConfig());\r\n      if (data?.token && data?.user) {\r\n        const { token: newToken, user: userData } = data;\r\n        \r\n        // Store in localStorage\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        \r\n        // Update state\r\n        setToken(newToken);\r\n        setUser(userData);\r\n        \r\n        return { success: true, user: userData };\r\n      } else {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error?.response?.data?.message || error.message || 'Login failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const payload = {\r\n        first_name: userData.firstName,\r\n        last_name: userData.lastName,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        confirm_password: userData.confirmPassword,\r\n        phone: userData.phone || '',\r\n        company: userData.company || '',\r\n        role: 'user'\r\n      };\r\n      const { data } = await http.post('/users/signup', payload, getAuthConfig());\r\n      const envelope = data || {};\r\n      const authData = envelope.data || envelope; // support both {data:{...}} and flat\r\n      \r\n      if ((envelope.success && authData?.token && authData?.user) || (authData?.token && authData?.user)) {\r\n        const { token: newToken, user: newUser } = authData;\r\n        \r\n        // Store in localStorage\r\n        localStorage.setItem('token', newToken);\r\n        localStorage.setItem('user', JSON.stringify(newUser));\r\n        \r\n        // Update state\r\n        setToken(newToken);\r\n        setUser(newUser);\r\n        \r\n        return { success: true, user: newUser };\r\n      } else {\r\n        throw new Error(envelope.message || 'Registration failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        error: error?.response?.data?.message || error.message || 'Registration failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Best-effort call to backend (will succeed only if token present)\r\n      await http.post('/users/logout', {}, getAuthConfig());\r\n    } catch (_) {\r\n      // ignore errors\r\n    }\r\n    // Clear localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    // Clear state\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!(token && user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user && user.role === 'admin';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated,\r\n    isAdmin\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjE,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACjF,MAAMC,IAAI,GAAGvB,KAAK,CAACwB,MAAM,CAAC;IAAEC,OAAO,EAAEN,YAAY;IAAEO,OAAO,EAAE;MAAEC,MAAM,EAAE;IAAmB;EAAE,CAAC,CAAC;EAC7F,MAAMC,aAAa,GAAIC,aAAa,IAAK;IACvC,MAAMC,EAAE,GAAGD,aAAa,IAAIZ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzD,OAAO;MACLQ,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,IAAII,EAAE,GAAG;UAAEC,aAAa,EAAE,UAAUD,EAAE;QAAG,CAAC,GAAG,CAAC,CAAC;MACjD;IACF,CAAC;EACH,CAAC;;EAED;EACA/B,SAAS,CAAC,MAAM;IACd,MAAMiC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,WAAW,GAAGhB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,MAAMgB,UAAU,GAAGjB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAE/C,IAAIe,WAAW,IAAIC,UAAU,EAAE;QAC7B,IAAI;UACF;UACA,MAAMX,IAAI,CAACY,GAAG,CAAC,kBAAkB,EAAEP,aAAa,CAACK,WAAW,CAAC,CAAC;UAC9DjB,QAAQ,CAACiB,WAAW,CAAC;UACrBrB,OAAO,CAACwB,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,CAAC;QACjC,CAAC,CAAC,OAAOI,KAAK,EAAE;UACd;UACArB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;UAChCtB,YAAY,CAACsB,UAAU,CAAC,MAAM,CAAC;UAC/BvB,QAAQ,CAAC,IAAI,CAAC;UACdJ,OAAO,CAAC,IAAI,CAAC;QACf;MACF;MACAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDkB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMnB,IAAI,CAACoB,IAAI,CAAC,cAAc,EAAEF,WAAW,EAAEb,aAAa,CAAC,CAAC,CAAC;MAC9E,IAAIc,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE3B,KAAK,IAAI2B,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE/B,IAAI,EAAE;QAC7B,MAAM;UAAEI,KAAK,EAAE6B,QAAQ;UAAEjC,IAAI,EAAEkC;QAAS,CAAC,GAAGH,IAAI;;QAEhD;QACAzB,YAAY,CAAC6B,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;QACvC3B,YAAY,CAAC6B,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;;QAEtD;QACA7B,QAAQ,CAAC4B,QAAQ,CAAC;QAClBhC,OAAO,CAACiC,QAAQ,CAAC;QAEjB,OAAO;UAAEG,OAAO,EAAE,IAAI;UAAErC,IAAI,EAAEkC;QAAS,CAAC;MAC1C,CAAC,MAAM;QACL,MAAM,IAAItC,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAO+B,KAAK,EAAE;MAAA,IAAAW,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACb,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QACLU,OAAO,EAAE,KAAK;QACdV,KAAK,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAW,eAAA,GAALX,KAAK,CAAEc,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBP,IAAI,cAAAQ,oBAAA,uBAArBA,oBAAA,CAAuBG,OAAO,KAAIf,KAAK,CAACe,OAAO,IAAI;MAC5D,CAAC;IACH;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOT,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMU,OAAO,GAAG;QACdC,UAAU,EAAEX,QAAQ,CAACY,SAAS;QAC9BC,SAAS,EAAEb,QAAQ,CAACc,QAAQ;QAC5BC,KAAK,EAAEf,QAAQ,CAACe,KAAK;QACrBC,QAAQ,EAAEhB,QAAQ,CAACgB,QAAQ;QAC3BC,gBAAgB,EAAEjB,QAAQ,CAACkB,eAAe;QAC1CC,KAAK,EAAEnB,QAAQ,CAACmB,KAAK,IAAI,EAAE;QAC3BC,OAAO,EAAEpB,QAAQ,CAACoB,OAAO,IAAI,EAAE;QAC/BC,IAAI,EAAE;MACR,CAAC;MACD,MAAM;QAAExB;MAAK,CAAC,GAAG,MAAMnB,IAAI,CAACoB,IAAI,CAAC,eAAe,EAAEY,OAAO,EAAE3B,aAAa,CAAC,CAAC,CAAC;MAC3E,MAAMuC,QAAQ,GAAGzB,IAAI,IAAI,CAAC,CAAC;MAC3B,MAAM0B,QAAQ,GAAGD,QAAQ,CAACzB,IAAI,IAAIyB,QAAQ,CAAC,CAAC;;MAE5C,IAAKA,QAAQ,CAACnB,OAAO,IAAIoB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAErD,KAAK,IAAIqD,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEzD,IAAI,IAAMyD,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAErD,KAAK,IAAIqD,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEzD,IAAK,EAAE;QAClG,MAAM;UAAEI,KAAK,EAAE6B,QAAQ;UAAEjC,IAAI,EAAE0D;QAAQ,CAAC,GAAGD,QAAQ;;QAEnD;QACAnD,YAAY,CAAC6B,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;QACvC3B,YAAY,CAAC6B,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACsB,OAAO,CAAC,CAAC;;QAErD;QACArD,QAAQ,CAAC4B,QAAQ,CAAC;QAClBhC,OAAO,CAACyD,OAAO,CAAC;QAEhB,OAAO;UAAErB,OAAO,EAAE,IAAI;UAAErC,IAAI,EAAE0D;QAAQ,CAAC;MACzC,CAAC,MAAM;QACL,MAAM,IAAI9D,KAAK,CAAC4D,QAAQ,CAACd,OAAO,IAAI,qBAAqB,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAAgC,gBAAA,EAAAC,qBAAA;MACdpB,OAAO,CAACb,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO;QACLU,OAAO,EAAE,KAAK;QACdV,KAAK,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAgC,gBAAA,GAALhC,KAAK,CAAEc,QAAQ,cAAAkB,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiB5B,IAAI,cAAA6B,qBAAA,uBAArBA,qBAAA,CAAuBlB,OAAO,KAAIf,KAAK,CAACe,OAAO,IAAI;MAC5D,CAAC;IACH;EACF,CAAC;EAED,MAAMmB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF;MACA,MAAMjD,IAAI,CAACoB,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,EAAEf,aAAa,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,OAAO6C,CAAC,EAAE;MACV;IAAA;IAEF;IACAxD,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;IAChCtB,YAAY,CAACsB,UAAU,CAAC,MAAM,CAAC;IAC/B;IACAvB,QAAQ,CAAC,IAAI,CAAC;IACdJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAM8D,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAO,CAAC,EAAE3D,KAAK,IAAIJ,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMgE,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAOhE,IAAI,IAAIA,IAAI,CAACuD,IAAI,KAAK,OAAO;EACtC,CAAC;EAED,MAAMU,KAAK,GAAG;IACZjE,IAAI;IACJI,KAAK;IACLF,OAAO;IACP2B,KAAK;IACLc,QAAQ;IACRkB,MAAM;IACNE,eAAe;IACfC;EACF,CAAC;EAED,oBACEzE,OAAA,CAACC,WAAW,CAAC0E,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnE,QAAA,EAChCA;EAAQ;IAAAqE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvE,GAAA,CArJWF,YAAY;AAAA0E,EAAA,GAAZ1E,YAAY;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}